// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import "forge-std/Test.sol";
import "../src/Ostraka.sol";
import "../lib/eas-contracts/contracts/ISchemaRegistry.sol";
import "eas-contracts/IEAS.sol";
import "forge-std/console.sol";

contract OstrakaExposed is Ostraka {
    constructor(IWorldID _worldId, IEAS _eas, bytes32 _schema_uid) public Ostraka(_worldId, _eas, _schema_uid) {}

    function exposedVote(bytes memory sismoMessage) external {
        _vote(sismoMessage);
    }

    function exposedAttestVote(bytes memory data) external returns (bytes32) {
        return attestVote(data);
    }
}

contract OstrakaTest is Test {
    OstrakaExposed public ostraka;
    string url = "https://www.google.com";

    function setUp() public {
        vm.createSelectFork(vm.rpcUrl("optimism_testnet"));
        IWorldID worldId = IWorldID(0xFc1315089316FcFe586a8E0a92873c258De8aaC1);
        IEAS eas = IEAS(0x1a5650D0EcbCa349DD84bAFa85790E3e6955eb84);

        // Register our schema to EAS schema registry
        // Also optimism address
        ISchemaRegistry schemaRegistry = ISchemaRegistry(0x7b24C7f8AF365B4E308b6acb0A7dfc85d034Cb3f);
        ISchemaResolver resolver;
        string memory schema = "bool signall, string content";
        bytes32 schema_uid = schemaRegistry.register(schema, resolver, false);

        ostraka = new OstrakaExposed(worldId, eas, schema_uid);
    }

    function testVote() public {
        // Encode signal and content into a sismo message
        bytes memory sismoMessage = abi.encode(true, url);
        bytes memory sismoMessage2 = abi.encode(false, url);

        // Call the vote
        ostraka.exposedVote(sismoMessage);
        ostraka.exposedVote(sismoMessage);
        ostraka.exposedVote(sismoMessage2);

        // Check the voting pools
        VotingPool memory pool = ostraka.getVotingPool(url);

        assertEq(pool.positiveVotes, 2);
        assertEq(pool.negativeVotes, 1);
        assertEq(pool.content, url);
    }

    function testWithFrontendData() public {
        // Encode signal and content into a sismo message
        bytes memory sismoConnectResponse =
            hex"";
        bytes memory sismoMessage =
            hex"00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000b2261736461736461736422000000000000000000000000000000000000000000";
        address worldcoinSignal = 0xB7142104EDb2B4599F4da6EB19DE148390D13135;
        uint256 worldcoinRoot = 0x13838d57de47c87895ba3cd8c030d6006667690e7755efbd8c3fd23432873016;
        uint256 worldCoinNullifierHash = 0x077ee8437a5612c74fc5ae4293a6ebc50632c7e7c9114aa4b0155c7be2adfe81;
        uint256[8] memory worldcoinProof = [
            0x0e6de0ece83d6f3b0c034b4654e7bfe5254b83d32c5a2fc01bfe2e376d191a53,
            0x1f8d83837b60a4ca08e8fed8a1c67b503787cd0f2dfe67a7b6f051269ee44f9b,
            0x09e2684479d4494ad1c56634a95c6557f75bdd88465b13280fd3627610b60e19,
            0x1105d4149ba7bb327aac4fa65a176986d0ad7749ccadc422d1eb76ee2ccdf82c,
            0x3013f13f813ee043a50b10821c12c53a2073e7acd09b79992c39501fca32a32d,
            0x20ff5db2db15fc26a6e0628a5f7599d0a6611670bdc9d006aec8fe0cd1c2ca39,
            0x2fe524a34d5240518121718cf67e61e7e554d4df65957872f2f06b930c56f56c,
            0x1be29f1530090c6e715392e765a1fb11c45721d4270d4b4cad3009ae398b14dd
        ];

        // Check the voting pools
        bytes32 attestation_id = ostraka.vote(
            sismoConnectResponse, sismoMessage, worldcoinSignal, worldcoinRoot, worldCoinNullifierHash, worldcoinProof
        );
    }

    function testAttestVote() public {
        bytes memory sismoMessage = abi.encode(true, url);
        bytes32 attestation_id = ostraka.exposedAttestVote(sismoMessage);
        IEAS eas = IEAS(0x1a5650D0EcbCa349DD84bAFa85790E3e6955eb84);

        Attestation memory attestation = eas.getAttestation(attestation_id);

        assertEq(attestation.data, sismoMessage);
    }
}
